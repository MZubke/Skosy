package hsh;

import java.util.Locale;

import org.eclipse.core.databinding.DataBindingContext;
import org.eclipse.core.databinding.observable.Realm;
import org.eclipse.jface.databinding.swt.SWTObservables;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.SashForm;
import org.eclipse.swt.events.ControlAdapter;
import org.eclipse.swt.events.ControlEvent;
import org.eclipse.swt.layout.RowData;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.TabFolder;
import org.eclipse.swt.widgets.TabItem;
import org.eclipse.swt.widgets.Tree;



public class HTWB {
	private DataBindingContext m_bindingContext;

	protected Shell shlHTWB;
	private Tree tree;
	private SKOSModel model;
	private Locale loc;


	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String[] args) {
		Display display = Display.getDefault();
		Realm.runWithDefault(SWTObservables.getRealm(display), new Runnable() {
			public void run() {
				try {
					HTWB window = new HTWB();
					window.open();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Open the window.
	 */
	public void open() {
		Display display = Display.getDefault();
		createContents();
		shlHTWB.open();
		shlHTWB.layout();
		while (!shlHTWB.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	/**
	 * Create contents of the window.
	 */
	protected void createContents() {
		loc = new Locale("en");
		
		shlHTWB = new Shell();
		shlHTWB.setSize(450, 300);
		shlHTWB.setText(LangRes.getStr(loc, "main.title"));
		RowLayout rl_shlHTWB = new RowLayout(SWT.HORIZONTAL);
		rl_shlHTWB.pack = false;
		rl_shlHTWB.fill = true;
		shlHTWB.setLayout(rl_shlHTWB);
		
		Menu menu = new Menu(shlHTWB, SWT.BAR);
		shlHTWB.setMenuBar(menu);
		
		MenuItem mntmDatei_1 = new MenuItem(menu, SWT.CASCADE);
		mntmDatei_1.setText("Datei");
		
		Menu menu_1 = new Menu(mntmDatei_1);
		mntmDatei_1.setMenu(menu_1);
		
		MenuItem mntmffnen = new MenuItem(menu_1, SWT.NONE);
		mntmffnen.addSelectionListener(new DlgOpen(this));
		//mntmffnen.setText("\u00D6ffnen");
		mntmffnen.setText(LangRes.getStr(loc, "main.open"));
		
		MenuItem mntmPreferences = new MenuItem(menu, SWT.NONE);
		mntmPreferences.setText("Preferences");
		mntmPreferences.addSelectionListener(new DlgPreferences(this));
		
		MenuItem mntmHelp = new MenuItem(menu, SWT.NONE);
		mntmHelp.setText("Help");
		
		final SashForm sashForm = new SashForm(shlHTWB, SWT.NONE);
		sashForm.setLayoutData(new RowData(shlHTWB.getClientArea().width, shlHTWB.getClientArea().height));


		tree = new Tree(sashForm, SWT.BORDER);
		
		TabFolder tabFolder = new TabFolder(sashForm, SWT.NONE);
		
		TabItem tbtmThesaurus = new TabItem(tabFolder, SWT.NONE);
		tbtmThesaurus.setText("Thesaurus");
		
		TabItem tbtmKwic = new TabItem(tabFolder, SWT.NONE);
		tbtmKwic.setText("KWIC");
		
		sashForm.setWeights(new int[] {1, 2});
		
		shlHTWB.addControlListener(new ControlAdapter() {
			public void controlResized(ControlEvent e) {
				sashForm.setBounds(shlHTWB.getClientArea());
				sashForm.setLayoutData(new RowData(shlHTWB.getClientArea().width, shlHTWB.getClientArea().height));
				if(shlHTWB.getClientArea().width < 300) {
					sashForm.setWeights(new int[] {1, 1}); //TODO compute smooth transition using sigmoid function
				} else {
					sashForm.setWeights(new int[] {1, 2});
				}
				sashForm.redraw();
				//System.out.println(sashForm.getClientArea().width + " x " +  sashForm.getClientArea().height);
			}
		});
		m_bindingContext = initDataBindings();

	}
	
	
	protected DataBindingContext initDataBindings() {
		DataBindingContext bindingContext = new DataBindingContext();
		//
		return bindingContext;
	}
	
	public void setThesaurus(String path) {
		model = new SKOSModel(path);
		model.Display(tree);
		
		/*
		File thesaurusFile = new File(path);
		

		String name = thesaurusFile.getName();
		
		TreeItem root = new TreeItem(tree,SWT.NONE);
		root.setText(name);

		TreeItem s1 = new TreeItem(root,SWT.NONE);
		s1.setText("Schema 1");
		
		TreeItem s2 = new TreeItem(root,SWT.NONE);
		s2.setText("Schema 2");
		*/
	}
}
